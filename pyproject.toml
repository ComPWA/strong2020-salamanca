[build-system]
build-backend = "setuptools.build_meta"
requires = [
    "setuptools>=61.2",
    "setuptools_scm",
]

[project]
authors = [
    {name = "Common Partial Wave Analysis", email = "compwa-admin@ep1.rub.de"},
    {name = "STRONG2020"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Scientific/Engineering",
]
description = "Jupyter notebooks for the STRONG2020 school in Salamanca, 2023"
dynamic = ["version"]
name = "strong2020-salamanca"
requires-python = ">=3.7"

[project.optional-dependencies]
dev = [
    "sphinx-autobuild",
    "strong2020-salamanca[doc]",
    "strong2020-salamanca[jupyter]",
    "strong2020-salamanca[sty]",
    "strong2020-salamanca[test]",
    "tox",
]
doc = [
    "ipympl",
    "myst-nb",
    "sphinx-book-theme",
    "sphinx-comments",
    "sphinx-copybutton",
    "sphinx-design",
    "sphinx-exercise",
    "sphinx-external-toc",
    "sphinx-togglebutton",
]
format = [
    "black",
    "isort",
]
jupyter = [
    "jupyterlab",
    "jupyterlab-code-formatter",
    "jupyterlab-lsp",
    "jupyterlab-myst",
    "python-lsp-server[flake8,rope]",
]
sty = [
    "pre-commit",
    "strong2020-salamanca[format]",
]
test = ["nbmake"]

[tool.tomlsort]
all = false
ignore_case = true
in_place = true
sort_first = [
    "build-system",
    "project",
    "tool.setuptools",
    "tool.setuptools_scm",
]
sort_table_keys = true
spaces_indent_inline_array = 4
trailing_comma_inline_array = true

[tool.tox]
legacy_tox_ini = """
    [tox]
    envlist =
        doc,
        sty,
    skip_install = True
    skip_missing_interpreters = True
    skipsdist = True

    [testenv:doc]
    allowlist_externals =
        sphinx-build
    commands =
        sphinx-build \
            --keep-going \
            -T \
            -b html \
            docs/ docs/_build/html
    description =
        Build documentation and API through Sphinx
    passenv = *
    setenv =
        FORCE_COLOR = yes

    [testenv:doclive]
    allowlist_externals =
        sphinx-autobuild
    commands =
        sphinx-autobuild \
            --open-browser \
            --re-ignore docs/_build/.* \
            --watch docs \
            docs/ docs/_build/html
    description =
        Set up a server to directly preview changes to the HTML pages
    passenv = *
    setenv =
        FORCE_COLOR = yes

    [testenv:docnb]
    allowlist_externals =
        sphinx-build
    commands =
        sphinx-build \
            --keep-going \
            -T \
            -b html \
            docs/ docs/_build/html
    description =
        Build documentation through Sphinx WITH output of Jupyter notebooks
    passenv = *
    setenv =
        EXECUTE_NB = yes
        FORCE_COLOR = yes

    [testenv:docnb-force]
    allowlist_externals =
        sphinx-build
    commands =
        sphinx-build -n --keep-going -b html docs/ docs/_build/html
    description =
        Execute ALL Jupyter notebooks and build documentation with Sphinx
    passenv = *
    setenv =
        FORCE_COLOR = yes
        FORCE_EXECUTE_NB = yes

    [testenv:nb]
    allowlist_externals =
        pytest
    commands =
        pytest --nbmake {posargs:docs}
    description =
        Run all notebooks with pytest
    passenv = *
    setenv =

    [testenv:sty]
    allowlist_externals =
        pre-commit
    commands =
        pre-commit run {posargs} -a
    description =
        Perform all linting, formatting, and spelling checks
"""
